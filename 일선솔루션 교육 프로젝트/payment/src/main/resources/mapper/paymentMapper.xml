<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="paymentMapper">
	<resultMap type="map" id="paymentMap">
		<result column="ID" property="id"/>
		<result column="PASSWORD" property="password"/>
		<result column="NAME" property="name"/>
		<result column="RANK" property="rank"/>
		<result column="LISTNO" property="listno"/>
		<result column="WRITER_ID" property="writer_id"/>
		<result column="TITLE" property="title"/>
		<result column="CONTENTS" property="contents"/>
		<result column="CREATE_DATE" property="create_date"/>
		<result column="PAYMENT_DATE" property="payment_date"/>
		<result column="PAYMENT_ID" property="payment_id"/>
		<result column="PAYMENT_STATUS" property="payment_status"/>
		<result column="NO" property="no"/>
	</resultMap>
	<select id="login" parameterType="map" resultMap="paymentMap">
		select
		    id
		    ,password
		    ,name
		    ,case when rank ='aa' then '부장'
				when rank ='bb' then '과장'
				when rank ='cc' then '사원'
				when rank ='dd' then '대리'
				end as rank
		from payment_member
		where 1=1
		and id=#{id}
	</select>
	<select id="list" resultMap="paymentMap" parameterType="map">
		select
			listno
			,m.name as writer_id
			,title
			,contents
			,to_char(create_date,'yyyy.mm.dd') as create_date
			,nvl(to_char(payment_date,'yyyy.mm.dd'),' ') as payment_date
			,nvl((select s.name from payment_member s where s.id=l.payment_id),' ') as payment_id
			,case when payment_status ='1' then '임시저장'
				when payment_status ='2' then '결재대기'
				when payment_status ='3' then '결재중'
				when payment_status ='4' then '결재완료'
				when payment_status ='0' then '반려'
				end as payment_status
		from payment_member m
		inner join payment_list l
		on m.id=l.writer_id
		where 1=1
		<choose>
			<when test='rank=="사원"'>
				and l.writer_id=#{id}
				<if test='searchType != null and "" != searchType'>
					<choose>
						<when test='searchType=="w"'>
							and m.name like '%'||#{searchText}||'%'
						</when>
						<when test='searchType=="p"'>
							and nvl((select s.name from payment_member s where s.id=l.payment_id),' ') like '%'||#{searchText}||'%'
						</when>
						<otherwise>
							and (title like '%'||#{searchText}||'%' or contents like '%'||#{searchText}||'%')
						</otherwise>
					</choose>
				</if>
				<choose>
					<when test='startDate != null and ""!=startDate and endDate != null and "" != endDate'>
						<![CDATA[and to_char(create_date,'yyyy-mm-dd') >= #{startDate} and to_char(create_date,'yyyy-mm-dd') <= #{endDate}]]>
					</when>
					<when test='startDate != null and "" != startDate'>
						<![CDATA[and to_char(create_date,'yyyy-mm-dd') >= #{startDate}]]>
					</when>
					<when test='endDate != null and "" != endDate'>
						<![CDATA[and to_char(create_date,'yyyy-mm-dd') <=#{endDate}]]>
					</when>
				</choose>
				<if test='status != null and "" != status'>
					and payment_status = #{status}
				</if>
			</when>
			<when test='rank=="과장"'>
				and (l.payment_status = 2 or l.payment_id = #{id} or l.writer_id=#{id})
				<if test='searchType != null and "" != searchType'>
					<choose>
						<when test='searchType=="w"'>
							and m.name like '%'||#{searchText}||'%'
						</when>
						<when test='searchType=="p"'>
							and nvl((select s.name from payment_member s where s.id=l.payment_id),' ') like '%'||#{searchText}||'%'
						</when>
						<otherwise>
							and (title like '%'||#{searchText}||'%' or contents like '%'||#{searchText}||'%')
						</otherwise>
					</choose>
				</if>
				<choose>
					<when test='startDate != null and ""!=startDate and endDate != null and "" != endDate'>
						<![CDATA[and to_char(create_date,'yyyy-mm-dd') >= #{startDate} and to_char(create_date,'yyyy-mm-dd') <= #{endDate}]]>
					</when>
					<when test='startDate != null and "" != startDate'>
						<![CDATA[and to_char(create_date,'yyyy-mm-dd') >= #{startDate}]]>
					</when>
					<when test='endDate != null and "" != endDate'>
						<![CDATA[and to_char(create_date,'yyyy-mm-dd') <=#{endDate}]]>
					</when>
				</choose>
				<if test='status != null and "" != status'>
					and payment_status = #{status}
				</if>
			</when>
			<otherwise>
				and ((l.payment_status != 1 and l.payment_status != 2) or l.writer_id=#{id})
				<if test='searchType != null and "" != searchType'>
					<choose>
						<when test='searchType=="w"'>
							and m.name like '%'||#{searchText}||'%'
						</when>
						<when test='searchType=="p"'>
							and nvl((select s.name from payment_member s where s.id=l.payment_id),' ') like '%'||#{searchText}||'%'
						</when>
						<otherwise>
							and (title like '%'||#{searchText}||'%' or contents like '%'||#{searchText}||'%')
						</otherwise>
					</choose>
				</if>
				<choose>
					<when test='startDate != null and ""!=startDate and endDate != null and "" != endDate'>
						<![CDATA[and to_char(create_date,'yyyy-mm-dd') >= #{startDate} and to_char(create_date,'yyyy-mm-dd') <= #{endDate}]]>
					</when>
					<when test='startDate != null and "" != startDate'>
						<![CDATA[and to_char(create_date,'yyyy-mm-dd') >= #{startDate}]]>
					</when>
					<when test='endDate != null and "" != endDate'>
						<![CDATA[and to_char(create_date,'yyyy-mm-dd') <=#{endDate}]]>
					</when>
				</choose>
				<if test='status != null and "" != status'>
					and payment_status = #{status}
				</if>
			</otherwise>
		</choose>
		order by listno
	</select>
	<select id="listCount" resultMap="paymentMap">
		select
			nvl(max(listno),0)+1 as listno
		from payment_list
	</select>
	<select id="listNo" resultMap="paymentMap" parameterType="map">
		select 
			listno
			,(select m.name from payment_member m where m.id=l.writer_id) as name
			,writer_id
			,title
			,contents
			,create_date
			,payment_date
			,payment_id
			,payment_status
		from payment_list l
		where 1=1
		and listno = #{listno}
	</select>
	<insert id="listInsert" parameterType="map">
		insert into payment_list (
			listno
			,writer_id
			,title
			,contents
			,create_date
			,payment_status
		) values(
			#{listno}
			,#{writer_id}
			,#{title}
			,#{contents}
			,sysdate
			,#{payment_status}
		)
	</insert>
	<update id="listUpdate" parameterType="map">
		update payment_list set 
			payment_status=#{payment_status}
			<choose>
				<when test='payment_id!=null and payment_id!=""'>
					,payment_date=sysdate
					,payment_id=#{payment_id}
				</when>
				<otherwise>
					,title=#{title}
					,contents=#{contents}
					,create_date=sysdate
				</otherwise>
			</choose>
		where listno=#{listno}
	</update>
	<insert id="historyInsert" parameterType="map">
		insert into payment_history 
		values(
			(select nvl(max(no),0)+1 from payment_history where listno=#{listno})
			,sysdate
			,#{sessionId}
			,#{payment_status}
			,#{listno}
		)
	</insert>
	<select id="historyList" resultMap="paymentMap" parameterType="map">
		select 
			no
			,payment_date
			,(select name from payment_member m where m.id=h.payment_id) as name
			,case when payment_status ='1' then '임시저장'
				when payment_status ='2' then '결재대기'
				when payment_status ='3' then '결재중'
				when payment_status ='4' then '결재완료'
				when payment_status ='0' then '반려'
				end as payment_status
		from payment_history h
		where listno=#{listno}
		order by no
	</select>
</mapper>
