/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.83
 * Generated at: 2022-11-15 00:15:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.lotto;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<form action=\"../random\" method=\"get\">\r\n");
      out.write("	<input type=\"submit\" value=\"모든번호 받기\" >\r\n");
      out.write("	</form>\r\n");
      out.write("	<form action=\"../choice\" method=\"get\">\r\n");
      out.write("	번호 2개 입력<input type=\"text\" name = \"choicenum1\" id=\"choicenum1\" maxlength=\"2\" required onkeyup=\"keyevent();\">\r\n");
      out.write("	<input type=\"text\" name = \"choicenum2\" id=\"choicenum2\" maxlength=\"2\" required onkeyup=\"keyevent();\">\r\n");
      out.write("	<input type=\"submit\" value=\"2개번호 지정\" onclick=\"chk()\">\r\n");
      out.write("	</form>\r\n");
      out.write("	<!-- \r\n");
      out.write("기본이  html문서 \r\n");
    
      out.write(" jsp문법 : html  css javascript jsp영역은 서로 완전히 다른 영역입니다.\r\n");
      out.write("                 변수를 공유하는데 한계가 있습니다. 거의 공유하지 못한다고 생각하면 됩니다..\r\n");
      out.write("                  >> 불편하고 무거워서  많이 쓰이는 문법이 jstl & el\r\n");
      out.write("                  \r\n");
      out.write("        jsp문법에서 출력할 데이터는 html 문서로 출력을 시켜야 합니다..(*)\r\n");
      out.write(" -->\r\n");
      out.write(" \r\n");
      out.write(" ");
 // parameter(클라이언트가 보낸 데이터)랑  Atrribute(서버반에서 주고 받는데이터)랑 구분하세요..
    // 컨트롤러가 setAtrribute로 만들 자료이기에
    int[] a = (int[])request.getAttribute("num");
    for(int i=0; i < a.length; i++){
       //    jsp문법에서 출력할 데이터는 html 문서로 출력을 시켜야 합니다..(*)
         out.print(a[i]+" / "+"<br>");
    }
      out.write("\r\n");
      out.write("<hr>\r\n");
      out.write(" ");
 // parameter(클라이언트가 보낸 데이터)랑  Atrribute(서버반에서 주고 받는데이터)랑 구분하세요..
    // 컨트롤러가 setAtrribute로 만들 자료이기에
    int[] aa = (int[])request.getAttribute("num");
    for(int i=0; i < aa.length; i++){
       //    jsp문법에서 출력할 데이터는 html 문서로 출력을 시켜야 합니다..(*)
      out.write("\r\n");
      out.write("       <!--  html영역 -->\r\n");
      out.write("       ");
      out.print( aa[i]);
      out.write(" <span> ---- </span><br>\r\n");
      out.write("       \r\n");
    }       
       
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("	var chk1 = document.getElementById('choicenum1');\r\n");
      out.write("	var chk2 = document.getElementById('choicenum2');\r\n");
      out.write("	keyevent = () => {\r\n");
      out.write("		chk1.value = chk1.value.replace(/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/, '');\r\n");
      out.write("		chk1.value = chk1.value.replace(/[^0-9]/g, '');\r\n");
      out.write("		chk2.value = chk2.value.replace(/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/, '');\r\n");
      out.write("		chk2.value = chk2.value.replace(/[^0-9]/g, '');\r\n");
      out.write("	}\r\n");
      out.write("	chk = () => {\r\n");
      out.write("		if(chk1.value>45||chk2.value>45||chk1.value==0||chk2.value==0||(chk1.value==chk2.value)){\r\n");
      out.write("			alert('숫자 1~45까지 입력');\r\n");
      out.write("			chk1.value = '';\r\n");
      out.write("			chk2.value = '';\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
